#!/bin/sh

#################################################################
#   Copyright (c) 2020 lencx, Licensed MIT license              #
#   Quickly create a template file by command                   #
#   author: lencx <cxin1314@gmail.com>                          #
#   create_at: Aug 07, 2020                                     #
#################################################################

AUTHOR='lencx'
PKG_NAME='new'
PKG_VERSION='0.1.1'
CREATE_AT=$(LANG=en_us_88591; date '+%b %d, %Y')

# dir & file
ROOT_DIR="src"
TARGET_DIR=""
FILE_NAME="main"
FILE_TYPE="js"
FILE_CONTENTS=""
IS_DONE="false"

# colors
COLOR_RED="\033[0;31m"
COLOR_GREEN="\033[0;32m"
COLOR_YELLOW="\033[0;33m"
COLOR_BLUE="\033[0;34m"
COLOR_RESET="\033[0m"

# info type
INFO_WARN="${COLOR_YELLOW}[WARN]"
INFO_EXISTS="${COLOR_BLUE}[EXIST]"
INFO_OK="${COLOR_GREEN}[OK]"

main() {
  if [ ! $1 ];then
    handle_args "-h"
    exit 0
  fi

  echo ""
  if [ $IS_DONE == "true" ];then echo "âœ¨Done!\n"; fi
  echo "$ cd $TARGET_DIR"
}

handle_args() {
  while test $# -gt 0; do
    case $1 in
      -h|--help)
        echo ""
        echo "Quickly create a template file by command"
        echo "Usage: $PKG_NAME [options] directory_name"
        echo "Info: [github:lencx] - v$PKG_VERSION"
        echo ""
        echo "Options:"
        echo "  -h,  --help           print '$PKG_NAME' command line options"
        echo "  -v,  --version        print '$PKG_NAME' version"
        echo "  -a=, --author=        files creator"
        echo "  -l=, --lang=          programming language(file extension), default: js"
        echo "                        example: -l=rs, -l=go etc."
        exit 0
      ;;

      -a*|--author*)
        AUTHOR=`echo $1 | sed -e 's/^[^=]*=//g'`
        shift
      ;;

      -l*|--lang*)
        FILE_TYPE=`echo $1 | sed -e 's/^[^=]*=//g'`
        shift
      ;;

      -v|--version)
        echo "$PKG_NAME $PKG_VERSION"
        exit 0
      ;;

      *)
        TARGET_DIR=$ROOT_DIR/$1
        DIR_NAME=$1
        # aa_bb_cc => aaBbCc
        CAMEL_CASE_NAME=$(camel_case "$1" "true")
        break
      ;;
    esac
  done

  if [ ! $1 ];then file_missing $1;fi

  mkdir -p $TARGET_DIR
  echo ""
  create_file "README.md" "# `echo $1 | sed 's/_/ /g'`\n"
  create_file_type "$FILE_TYPE" "$1"
}

file_missing() {
  if [ ! $1 ];then
    print "$INFO_WARN" "File name is missing"
    echo "Usage: ${COLOR_GREEN}new -h$COLOR_RESET"
    exit 0
  fi
}

create_file() {
  TARGET_FILE=$TARGET_DIR/$1
  if [ ! -f $TARGET_FILE ];then
    printf "$2" >> $TARGET_FILE
    if [ $1 != 'README.md' ];then IS_DONE="true"; fi
    print "$INFO_OK" "$TARGET_FILE"
    if [ $1 == 'mod.rs' ];then
      echo "pub mod $DIR_NAME;" >> $ROOT_DIR/lib.rs
    fi
  else
    if [ $1 != 'README.md' ];then
      print "$INFO_EXISTS" "$TARGET_FILE"
    fi
  fi
}

create_file_type() {
  case $1 in
    js)
      FILE_CONTENTS="/*\n * @author: $AUTHOR\n * @create_at: $CREATE_AT\n */\n\nvar $CAMEL_CASE_NAME = function() {\n  \n};"
    ;;
    rs)
      FILE_NAME="mod"
      FILE_CONTENTS="// @author: $AUTHOR\n// @create_at: $CREATE_AT\n\n#[allow(dead_code)]\npub fn $2() {\n  \n}\n\n#[test]\nfn test() {\n  \n}"
    ;;
    py)
      FILE_CONTENTS="# @author: $AUTHOR\n# @create_at: $CREATE_AT\n\ndef $CAMEL_CASE_NAME():\n  "
    ;;
    # TODO: more template
    *)
      break
    ;;
  esac

  create_file "$FILE_NAME.$1" "$FILE_CONTENTS"
}

print() {
  echo "$1$COLOR_RESET $2$COLOR_RESET"
}

# aa_bb_cc => AaBbCc
camel_case() {
  str_arr=(`echo $1 | tr '_' ' '`)
  result=''
  for i in ${str_arr[@]}
  do
    first_letter=`echo ${i:0:1} | awk '{print toupper($0)}'`
    other_letter=${i:1}
    result=$result$first_letter$other_letter
  done

  # aa_bb_cc => aaBbCc
  if [ $2 == 'true' ];then
    first_result=$(echo ${result:0:1} | tr '[A-Z]' '[a-z]')
    result=$first_result${result:1}
  fi
  echo $result
  return $?
}

handle_args "$@"
main "$@"
